// clientTCP implements the client code
// Основным нововведением в механизме клиента является то, что, помимо вывода сообщений от
// сервера в консоль, мы также реализуем ввод своих сообщений с клавиатуры и отправку их на сервер,
// используя, точно так же, интерфейсы io.Writer и io.Reader, полностью абстрагируясь от внутреннего
// устройства подключения.
// Так как нам не нужно проводить никаких манипуляций с данными при получении и отправки, мы
// можем использовать функцию io.Copy() чтобы напрямую соединить потоки подключения и
// стандартного ввода/вывода
// Задача: добавить в приложение чата возможность устанавливать клиентам свой никнейм при
// подключении к серверу
// Решение: ввод сообщения, начинающийся с @ - записывается как никнейм
package main

import (
	"fmt"
	"io"
	"log"
	"net"
	"os"
)

func main() {
	conn, err := net.Dial("tcp", "localhost:8000")
	if err != nil {
		log.Fatal(err)
	}
	defer conn.Close()

	go func() {
		io.Copy(os.Stdout, conn)
	}()
	io.Copy(conn, os.Stdin) // until you send ^Z
	fmt.Printf("%s: exit", conn.LocalAddr())
}
